
Simulations should provide enough information to find optimizations.
Generally, this is at the system level.  In other words, the collected
information pertains to a collection of Agents, rather than individuals.  To
that end, I need to observe more events (state changes).

These are the optimizations I'm going for:
1. MAX Taxi utilization
    a. MAX time HIRED (per Taxi?)
        i. total time HIRED / length of simulation
        ii. same for one Taxi as for all Taxis (I think)
        iii. total time HIRED: observe span between each pickup and dropoff
    b. maybe also a ratio of IDLE to HIRED (all Taxis)
2. MIN Taxi distances traveled (fuel, maintenance)
    a. MIN, MAX average distances as a function of number of Fares delivered (
    ...

3. MAX Fares throughput (number of Fares serviced)

4. MIN Fare wait times


I should be able to optimize for two at a time.  It's not an optimization to
maximize or minimize for just one.  On the other hand, optimizing for three or
four might not be possible.


To find optimizations, I need observations (sounds like a tautology but it's
not).  Which combination of observations below will produce the optimizations
above?

And what simtype + NP combo is best for each of the following combinations?
- 1,2
- 1,4
- 3,2
- 3,4



Agents
-------
* Activation?  Not necessary.  Taxis are active for the whole simulation.
  Fares can observe their own activations.
* 

Fares
------
* When they enter the simulation (ENTER)
* When they broadcast a request for pickup
    * global for FIFO and closestFare (BCAST or BROADCAST)
    * mixedmode could include local, regional and global broadcasts (LCAST,
      RCAST, GCAST)?
    * If I skip the mixedmode broadcasts, I may as well skip the BROADCASTs
      altogether.  The first one for non-mixedmode is right at ENTER, so it's
      redundant to store more data.
* If/when they're picked up (PICKED_UP)
    * NO: taxis do this, and it's called PICK_UP (not PICKED_UP)
* If/when they're dropped off (DROPPED_OFF)
    * this is effectively the end for that Fare, so this could be called EXIT
    * NO: taxis do this, and it's called DROP_OFF (not DROPPED_OFF or EXIT)

Taxis
------
* Activation?  Not necessary.  Taxis are active for the whole simulation.
* When he's sitting idle (IDLE or FOR_HIRE)
* When he's on his way to a Fare
    * cooperate: straightforward (GOING_TO_FARE)
    * compete: if I try and track competing time, including reneging, things
      get complicated (COMPETING, (RENEGED, LOST_FARE))?
* When he's got a Fare (IN_TRANSIT or HIRED)

