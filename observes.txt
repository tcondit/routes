
Summary
========
Simulations should provide enough information to find optimizations.  This is
generally at the system level: the collected information pertains to a
collection of Agents, rather than individuals.  To that end, I need to observe
more events (state changes).


The optimizations
==================
I'm going for four optimizations to start:
1. Taxi utilization (time) // maximize
    a. MAX time HIRED (per Taxi?)
        i. total time HIRED / length of simulation
        ii. same for one Taxi as for all Taxis (I think)
        iii. total time HIRED: observe span between each pickup and dropoff
    b. maybe also a ratio of IDLE to HIRED (all Taxis)
2. Taxi distances traveled (fuel, maintenance)  // minimize
    a. MIN, MAX average distances as a function of number of Fares delivered
    (per Taxi? all Taxis?)

3. Fares throughput (number of Fares serviced)  // maximize
    a. as a function of total number of Fares in the system?

4. Fare wait times  // minimize


I should be able to optimize for two at a time.  It's not an optimization to
maximize or minimize for just one.  On the other hand, optimizing for three or
four might not be possible.


To find optimizations, I need observations (sounds like a tautology but it's
not).  Which combination of observations below will produce the optimizations
above?

And what simtype + NP combo is best for each of the following combinations?
- 1,2
- 1,4
- 3,2
- 3,4



The signal events
==================
Fares
------
* ENTER when they enter the simulation
* EXIT  when they exit the simulation

Taxis
------
* IDLE          when he's sitting idle              (FOR_HIRE?)
* GOING_TO_FARE when he's going to pickup a Fare    (GOING_TO_PICKUP?)
* HIRED         when he's got a Fare                (IN_TRANSIT?, GOING_TO_DEST?)

Note, there's no ENTER or EXIT here


Signal event calculations
==============================
Fares
------
* ENTER = now()
* EXIT = now()
* delta(ENTER, EXIT) = (EXIT - ENTER)
* Fare throughput = count(EXIT)/count(ENTER)
    * should be able to get this for small timespans

Taxis
------
* total(IDLE) = sim_len - (GOING_TO_FARE+HIRED)
* total(DISTANCE_TRAVELED) = ...
* utilization (time) = sim_len - HIRED
* distances traveled (units) = total(...)

Combo
------
* delta(HIRED, ENTER) = ...
* Fare wait times = delta(HIRED - ENTER)


Other signaling possibilities (gotta keep 'em separated!)
==========================================================
Fares
------
* BROADCAST     when they broadcast a request for pickup
    * global for FIFO and closestFare (BROADCAST)
    * mixedmode could include local, regional and global broadcasts (LCAST,
      RCAST, GCAST)?
    * If I skip the mixedmode broadcasts, I may as well skip the BROADCASTs
      altogether.  The first one for non-mixedmode is right at ENTER, so it's
      redundant to store more data.

Taxis
------
* LOST_FARE     when he's lost the Fare (compete only) (RENEGED?)
    * For now, compete simtypes will simply go from GOING_TO_FARE back to IDLE
      when they lose a Fare.  Maybe later it'll make sense to consider this.

